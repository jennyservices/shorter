// Automatically generated by Jenny. DO NOT EDIT!

// Package v1 as generated by Jenny
// Please read about it https://localhost:8080/_spec
package v1

import (
	"context"

	"github.com/go-kit/kit/endpoint"
	"github.com/jennyservices/jenny/options"
)

// Shorter as generated by Jenny
// Please read more at https://localhost:8080/_spec
type Shorter interface {

	// Shorten Gets a User from the database
	Shorten(ctx context.Context, Long URL) (Body *URL, err error)
}

// URL is generated from a swagger definition
type URL struct {
	Addr string `json:"addr"` // Addr is generated from a swagger definition
}

// _shortenRequest is not to be used outside of this file.
// see https://gokit.io/examples/stringsvc.html#requests-and-responses for more detail
type _shortenRequest struct {
	Long URL `json:"long"` // Long is generated from a swagger definition

}

// _shortenResponse is not to be used outside of this file.
// see https://gokit.io/examples/stringsvc.html#requests-and-responses for more detail
type _shortenResponse struct {
	Body *URL `json:"body,omitempty"` // Body is generated from a swagger definition

}

// endpoints as used in https://gokit.io/examples/stringsvc.html#endpoints
func makeShortenEndpoint(svc Shorter, opts *options.Options) endpoint.Endpoint {
	shortenEndpoint := func(ctx context.Context, request interface{}) (interface{}, error) {

		req := request.(_shortenRequest)

		resp := _shortenResponse{}
		var err error

		resp.Body, err = svc.Shorten(ctx, req.Long)

		return resp, err
	}

	shortenMiddleware := opts.OpMiddlewares("Shorten")

	return shortenMiddleware(shortenEndpoint)
}
